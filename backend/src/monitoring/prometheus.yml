global:
  scrape_interval: 15s
  evaluation_interval: 15s

rule_files:
  - "receipt_vault_alerts.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

scrape_configs:
  # Receipt Vault Pro Application Metrics
  - job_name: 'receipt-vault-pro'
    static_configs:
      - targets: ['host.docker.internal:3001']
    metrics_path: '/metrics'
    scrape_interval: 10s
    scrape_timeout: 5s
    honor_labels: true

  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # Node Exporter - System metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 5s

  # cAdvisor - Container metrics
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 5s

  # PostgreSQL Database metrics (if pg_stat_statements is available)
  - job_name: 'postgres-exporter'
    static_configs:
      - targets: ['host.docker.internal:9187']
    scrape_interval: 10s

  # Redis metrics (if redis_exporter is available)
  - job_name: 'redis-exporter'
    static_configs:
      - targets: ['host.docker.internal:9121']
    scrape_interval: 10s

  # Custom business metrics endpoint
  - job_name: 'receipt-vault-business-metrics'
    static_configs:
      - targets: ['host.docker.internal:3001']
    metrics_path: '/health'
    scrape_interval: 30s

  # Health check endpoints
  - job_name: 'receipt-vault-health'
    static_configs:
      - targets: ['host.docker.internal:3001']
    metrics_path: '/health'
    scrape_interval: 10s
    scrape_timeout: 3s
    
  # Load balancer metrics (if using nginx/haproxy)
  - job_name: 'nginx-exporter'
    static_configs:
      - targets: ['host.docker.internal:9113']
    scrape_interval: 10s

# Remote write configuration for long-term storage (optional)
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint.com/api/v1/write"
#     basic_auth:
#       username: "your-username"
#       password: "your-password" 